# Двойникова Валерия Алексеевна, гр. 4381.

# -----------------------------------------------------------------------------
# Основная функция
# -----------------------------------------------------------------------------

def MUL_Nk_N_f(num, k):
    """
    *** Умножение натурального числа на 10^k ***
    num — словарь в виде {'a': list[int]}
    k — натуральное число, показатель степени 10
    Возврат — новое число того же формата (dict)
    raise ValueError — если число некорректное или k < 0
    """
    check_natural_number(num) # сначала проверка числа
    check_digit_power(k) # проверка показателя степени

    a = num['a'][:]  # копируем список цифр

    # умножение на 10^k = добавление k нулей в конец списка (младшие разряды)
    a.extend([0] * k)

    return {'a': a}

# -----------------------------------------------------------------------------
# Вспомогательные функции
# -----------------------------------------------------------------------------

def check_digit_power(k):
    """
    Проверка, что показатель степени k натуральное число >=0
    raise ValueError, если некорректно
    """
    if not isinstance(k, int) or k < 0:
        raise ValueError("k должно быть натуральным числом >= 0")

def check_natural_number(num):
    """
    Проверка, что число натуральное
    num — словарь {'a': list[int]}
    raise ValueError, если не натуральное
    """
    if not isinstance(num, dict):
        raise ValueError("число должно быть словарём")
    a = num.get('a')
    if not isinstance(a, list) or len(a) == 0:
        raise ValueError("*a* должно быть непустым списком")
    if not all(isinstance(d, int) and 0 <= d <= 9 for d in a):
        raise ValueError("все элементы списка a должны быть цифрами (0–9)")
