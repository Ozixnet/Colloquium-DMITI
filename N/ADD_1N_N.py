# Двойникова Валерия Алексеевна, гр. 4381.

# -----------------------------------------------------------------------------
# Основная функция
# -----------------------------------------------------------------------------

def ADD_1N_N_f(num):
    """
    *** Функция добавления 1 к натуральному числу ***
    num — словарь с ключами:
        a — список цифр числа (list[int]), от старшей к младшей
    Возврат — новое число того же формата (dict)
    raise ValueError — если число неверное по каким-либо причинам, а именно:
        — структура данных неверная (num не словарь)
        — число не натуральное
        — неверные цифры (в a есть элементы не int)
        — логические ошибки при операциях
            при сложении или прибавлении: если массив a пустой, т.е. нельзя выполнять операцию
        — ДОПОЛНИТЕЛЬНО для безопасности:
            при обращении к индексам (старшая/младшая цифра), если индекс выходит за пределы списка
            выводится ошибка
            при переносе в сложении (carry) проверка, что список расширяется корректно
    """
    check_natural_number(num) # сначала проверка

    a = num['a'][:] # копирование списка цифр

    # переворачиваем для прибавления с младшего разряда
    a = turn_number(a)
    carry = 1 # перенос разряда (т.к. прибавляем единицу)

    for i in range(len(a)):
        # прибавляем перенос к текущей цифре
        a[i] += carry

        if a[i] < 10: # сумма < 10: перенос больше не нужен
            carry = 0
            break
        else:         # иначе: ставим цифру на 0, перенос остаётся
            a[i] = 0
            carry = 1

    # если после всех разрядов остался перенос, добавляем новую старшую цифру
    if carry:
        a.append(1)

    # разворот обратно
    a = turn_number(a)

    return {'n': len(a), 'a': a}


# -----------------------------------------------------------------------------
# Вспомогательные функции
# -----------------------------------------------------------------------------

def turn_number(a):
    """
    Разворот списка цифр числа
    a — список цифр (list[int])
    Возвращает перевёрнутый список
    """
    return a[::-1]

def check_natural_number(num):
    """
    Проверка, что число натуральное
    num — словарь {'A': list[int]}
    raise ValueError, если не натуральное
    """
    if not isinstance(num, dict):
        raise ValueError("число должно быть словарём {'A':list[int]}")
    a = num.get('a')
    if not isinstance(a, list) or len(a) == 0:
        raise ValueError("*а* должно быть непустым списком")
    if not all(isinstance(d, int) and 0 <= d <= 9 for d in a):
        raise ValueError("все элементы списка A должны быть цифрами (0–9)")

